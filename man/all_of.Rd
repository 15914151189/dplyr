% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/funs-predicates.R
\name{all_of}
\alias{all_of}
\alias{any_of}
\title{Return the union or intersection of predicate expressions.}
\usage{
all_of(..., .vectorised = TRUE)

any_of(..., .vectorised = TRUE)
}
\arguments{
\item{...}{Predicate expressions.}

\item{.vectorised}{If \code{TRUE}, predicates are joined with \code{&} or
\code{|}. Otherwise, they are joined with \code{&&} or \code{||}.}
}
\value{
A \link[rlang:quo]{quosure}.
}
\description{
\code{all_of()} and \code{any_of()} take predicate expressions and join them
into a single predicate. They assume vectorised expressions by
default and join them with \code{&} or \code{|}. Note that this will also
work with scalar predicates, but if you want to be explicit you can
set \code{.vectorised} to \code{FALSE} to join by \code{&&} or \code{||}.
}
\examples{
all_of(cyl > 3, am == 1)
any_of(cyl > 3, am == 1)
any_of(cyl > 3, am == 1, .vectorised = FALSE)
}
